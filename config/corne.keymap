/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&none>;
            key-positions = <37 40>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E             &kp R        &kp T        &kp Y    &kp U        &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D             &kp F        &kp G        &kp H    &kp J        &kp K      &kp L    &kp SEMI  &kp DOUBLE_QUOTES
&kp LSHFT   &kp Z  &kp X  &kp C             &kp V        &kp B        &kp N    &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                          &kp LEFT_COMMAND  &lt 1 SPACE  &kp SPACE    &kp RET  &lt 2 SPACE  &kp RALT
            >;
        };

        first {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB       &kp N7        &kp N8        &kp N9        &kp DOT  &kp PLUS     &kp ASTERISK   &kp DLLR  &kp COLON  &kp PIPE          &kp GRAVE  &kp BSPC
&kp C_BRI_UP  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0   &kp MINUS    &kp SLASH      &kp HASH  &kp LBRC   &kp RBRC          &kp SEMI   &kp C_VOL_UP
&kp C_BRI_DN  &kp N1        &kp NUMBER_2  &kp NUMBER_3  &trans   &kp EQUAL    &kp BACKSLASH  &kp AMPS  &kp LT     &kp GREATER_THAN  &kp SQT    &kp C_VOL_DN
                                          &kp LGUI      &trans   &kp SPACE    &kp RET        &trans    &kp RALT
            >;
        };

        second {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp TILDE  &kp PERCENT  &kp UNDER  &kp CARET  &kp PLUS     &kp CARET  &kp AMPS  &kp UP    &kp LPAR   &kp RPAR  &kp BSPC
&kp LCTRL       &kp AT     &kp DQT      &kp EXCL   &kp QMARK  &kp MINUS    &kp SLASH  &kp LEFT  &kp DOWN  &kp RIGHT  &kp BSLH  &kp GRAVE
&bt BT_CLR_ALL  &kp LBKT   &kp RBKT     &kp LPAR   &kp RPAR   &kp EQUAL    &kp BSLH   &kp PLUS  &kp LBRC  &kp RBRC   &kp PIPE  &kp TILDE
                                        &kp LGUI   &trans     &kp SPACE    &kp RET    &trans    &kp RALT
            >;
        };

        third {
            bindings = <
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&caps_word  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
